ymd("192012")
ymd("//192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_momente
this_moment
this_moment %>% update(hours=hour(now()),minutes=minute(now()))
this_moment %>% update(hours=hour(now()),minutes=minute(now()))
a<-x %>% print
this_moment <- update(this_moment,hours=hour(now()),minutes=minute(now()))
this_moment
nyc<_now(tzone = "America/New_York")
nyc<-now(tzone = "America/New_York")
nyc
depart<-nyc+days(2)
depart
depart<-update(depart,hours=17,minutes=34)
depart
arrive<-depart+hours(15)+minutes(50)
?with_tz
arrive<-with_tz(arrive,tzone = "Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz = "Singapore")
last_time
?interval
interval(last_time,arrive)
how_long<-interval(last_time,arrive)
how_long
as.period(how_long)
stopwatch()
getwd()
setwd("C:/Users/mauricio.muniz/Desktop")
library(data.table)
install.packages("data.table")
library(data.table)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl,"comm06.csv")
houseData <- data.table(read.csv("comm06.csv"))
houseData
names(houseData)
strsplit(names(houseData))
strsplit(names(houseData),split = "")
strsplit(names(houseData),split = "t")
strsplit(names(houseData),split = "p")
names(houseData)[123]
strsplit(names(houseData),split = "wgtp")
strsplit(names(houseData),split = "wgtp")[123]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl,"GDP.csv")
GDP <- data.table(read.csv("GDP.csv"))
head(GDP)
GDP <- data.table(read.csv("GDP.csv",skip = 4,nrows = 190))
head(GDP)
head(GDP[,c(X,X.1,X.3,X.4)])
GDP[,c(X,X.1,X.3,X.4)]
GDP[,list(X,X.1,X.3,X.4)]
GDP<-GDP[,list(X,X.1,X.3,X.4)]
setNames(GDP,c("countrycode","rank","name","nGDP"))
GDP
GDP<-setNames(GDP,c("countrycode","rank","name","nGDP"))
GDP
GDP$nGDP
GDP[,gsub(",","",GDP$nGDP)]
GDP[,as.numeric(gsub(",","",GDP$nGDP))]
GDP[,mean(as.numeric(gsub(",","",GDP$nGDP)))]
GDP[,grep("^United",name)]
GDP[GDP[,grep("^United",name)],]
GDP[GDP[,grep("^United",name)],list(name)]
count(GDP[,grep("^United",name)])
n(GDP[,grep("^United",name)])
GDP[,grep("^United",name)]
table(GDP[,grep("^United",name)])
n(GDP[,grep("^United",name)])
GDP[,grep("^United",name)]
GDP[,.N,grep("^United",name)]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl,"edStat.csv")
edStat <- data.table(read.csv("edStat.csv"))
mergData <- merge(GDP,edStat,by.x="countrycode",by.y = "countryCode")
mergData <- merge(GDP,edStat,by.x="countrycode",by.y = "CountryCode")
summary(mergData)
names(edStat)
names(GDP)
head(edStat$Special.Notes)
edStat[,grep("Fiscal year",Special.Notes)]
edStat[,grep("Fiscal year * June",Special.Notes)]
edStat[,grep("Fiscal year (*) June",Special.Notes)]
edStat[,grep("Fiscal year [*] June",Special.Notes)]
edStat[,grep("Fiscal year",Special.Notes)]
edStat[,grep("Fiscal year$",Special.Notes)]
edStat[,grep("^Fiscal year",Special.Notes)]
edStat[,grep("Fiscal year(.*)",Special.Notes)]
edStat[,grep("Fiscal year(.*)June",Special.Notes)]
edStat[,count(grep("Fiscal year(.*)June",Special.Notes))]
edStat[,grep("Fiscal year(.*)June",Special.Notes)]
length(edStat[,grep("Fiscal year(.*)June",Special.Notes)])
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(amzn)
row.names(amzn)
head(amzn)
class(amzn)
View(amzn)
View(amzn)
data.table(amzn)
head(amzn)
names(amzn)
attributes(amzn)
amzn$index
amzn[index]
amzn[index,]
amzn["index"]
ymd(amzn["index"])
amzn
index(amzn)
dateStock <- index(amzn)
head(dateStock)
ymd(dateStock)
dateStock <- ymd(dateStock)
class(dateStock)
year(dateStock)
year(dateStock==2012)
year(dateStock==year(2012))
year(dateStock==years(2012))
head(year(dateStock))
head(year(dateStock)==2007)
head(year(dateStock)==2012)
year(dateStock)==2012
sum(year(dateStock)==2012)
head(wday(dateStock))
head(`wday<-`(dateStock,label=TRUE)
)
head(`wday<-`(dateStock))
head(wday(dateStock))
head(wday(dateStock)==2)
SUM(wday(dateStock)==2)
sum(wday(dateStock)==2)
sum(year(dateStock)==2012 & wday(dateStock)==2)
setwd("~/datasciencecoursera/Course3/Assignment")
?unz
rm(list=ls())
dir()
a<-read.table("UCI HAR Dataser/features.txt")
a<-read.table("UCI HAR Dataset/features.txt",sep = "-")
a<-read.table("UCI HAR Dataset/features.txt",sep = "-",fill = TRUE)
head(a)
a[14:17,]
head(a)
a<-read.table("UCI HAR Dataset/features.txt",sep = "-",fill = TRUE,sep=" ")
a<-read.table(textConnection(gsub("-"," ",readLines("UCI HAR Dataset/features.txt"))))
a<-read.table(textConnection(gsub("-"," ",readLines("UCI HAR Dataset/features.txt"))),fill=TRUE)
head(a)
a<-read.table(gsub("-"," ",readLines("UCI HAR Dataset/features.txt")),fill=TRUE)
a<-read.table(gsub("-"," ",readLines("UCI HAR Dataset/features.txt")),fill=TRUE,text = TRUE)
a<-read.table(textConnection(gsub("-"," ",readLines("UCI HAR Dataset/features.txt"))),fill=TRUE)
head(a)
library(dplyr)
head(a)
readLines("UCI HAR Dataset/features.txt") %>%
gsub("-","")
gsub("-","",.)
gsub("-","",)
readLines("UCI HAR Dataset/features.txt") %>%
gsub("-","",.)
readLines("UCI HAR Dataset/features.txt") %>%
gsub("-","",.) %>%
textConnection() %>%
read.table() %>%
head()
head(a)
readLines("UCI HAR Dataset/features.txt") %>%
+ gsub("-"," ",.) %>%
+ textConnection() %>%
+ read.table() %>%
+ head()
readLines("UCI HAR Dataset/features.txt") %>%
gsub("-"," ",.) %>%
textConnection() %>%
read.table() %>%
head()
readLines("UCI HAR Dataset/features.txt") %>%
gsub("-"," ",.) %>%
textConnection() %>%
read.table(,fill=TRUE) %>%
head()
featuresTbl <- readLines("UCI HAR Dataset/features.txt") %>%
gsub("-"," ",.) %>%
textConnection() %>%
read.table(fill=TRUE) %>%
head()
featuresTbl
featuresTbl <- readLines("UCI HAR Dataset/features.txt") %>%
gsub("-"," ",.) %>%
textConnection() %>%
read.table(fill=TRUE)
head(featuresTbl)
path <- function (x) {paste("UCI HAR Dataset/", x, sep = "")}
featuresTbl <- readLines(path(features.txt)) %>%
gsub("-"," ",.) %>%
textConnection() %>%
read.table(fill=TRUE)
path <- function (x) {paste("UCI HAR Dataset/", x, sep = "")}
featuresTbl <- readLines(path("features.txt")) %>%
gsub("-"," ",.) %>%
textConnection() %>%
read.table(fill=TRUE)
rm(featuresTbl)
path <- function (x) {paste("UCI HAR Dataset/", x, sep = "")}
featuresTbl <- readLines(path("features.txt")) %>%
gsub("-"," ",.) %>%
textConnection() %>%
read.table(fill=TRUE)
head(featuresTbl)
head(featuresTbl)
tail(featuresTbl)
path("test/subject_test.txt")
read.table(path("test/subject_test.txt"))
a<-read.table(path("test/subject_test.txt"))
head(a)
tail(a)
summary(a)
table(a)
x<-read.table(path("test/X_test.txt"))
names(x)
y<-read.table(path("test/Y_test.txt"))
head(y)
table(y)
table(a)
names(x)
tst_is_baxt<-read.table(path("test/Inertial Signals/body_acc_x_test.txt"))
names(tst_is_baxt)
tst_is_bayt<-read.table(path("test/Inertial Signals/body_acc_y_test.txt"))
names(tst_is_bayt)
names(tst_is_bayt)
tst_is_bgxt<-read.table(path("test/Inertial Signals/body_gyro_x_test.txt"))
names(tst_is_bgxt)
head(tst_is_baxt)
head(tst_is_baxt[,3])
head(tst_is_baxt[,3:4])
head(tst_is_baxt[,3])
head(tst_is_baxt[,3:4])
summary(tst_is_baxt)
x
head(x[,1:4])
head(a)
head(featuresTbl)
table(featuresTbl$V1)
head(featuresTbl)
head(x)
head(y)
table(y)
head(a)
table(a)
rm(list=ls())
path <- function (x) {paste("UCI HAR Dataset/", x, sep = "")}
featuresTbl <- readLines(path("features.txt")) %>%
gsub("-"," ",.) %>%
textConnection() %>%
read.table(fill=TRUE)
featuresTbl <- path("features.txt") %>%
read.table(sep=" ",fill = TRUE)
head(featuresTbl)
tail(featuresTbl)
a <- read.table(path("test/subject_test.txt"))
head(a)
b <- read.table(path("train/subject_train.txt"))
head(b)
table(b)
table(a)
a_sub <- read.table(path("test/subject_test.txt"))
b_sub <- read.table(path("train/subject_train.txt"))
rm(a)
rmb
rm(b)
a_test <- read.table(path("test/subject_test.txt"))
a_train <- read.table(path("train/subject_train.txt"))
subject_test <- read.table(path("test/subject_test.txt"))
subject_train <- read.table(path("train/subject_train.txt"))
rm(a_sub)
tm(a_test)
rm(a_test)
rm(a_train)
rm(b_sub)
subject_test <- read.table(path("test/subject_test.txt"))
subject_train <- read.table(path("train/subject_train.txt"))
X_test <- read.table(path("test/X_test.txt"))
Y_test <- read.table(path("test/y_test.txt"))
X_train <- read.table(path("train/X_train.txt"))
Y_train <- read.table(path("train/y_train.txt"))
View(X_test)
head(X_train][5,1:4])
head(X_train[5,1:4])
head(X_train[1:10,1:4])
head(X_train[1:20,1:4])
head(X_train[,1:4],15)
head(X_train[,1:4],15)
head(subject_train,15)
head(Y_train,15)
list.files()
list.files(recursive = TRUE)
list.files( pattern = "_(train|test).txt$",recursive = TRUE)
listFiles <- list.files( pattern = "_(train|test).txt$",recursive = TRUE)
listFiles <- data.table(list.files( pattern = "_(train|test).txt$",recursive = TRUE))
listFiles
listFiles[,listFiles$a1=1:24]
listFiles[,listFiles$a1=1:24]
listFiles[,]
mutate(listFiles,a=1:24)
listFiles
listFiles
listFiles <- data.table(filePath=list.files( pattern = "_(train|test).txt$",recursive = TRUE))
listFiles
listFiles <- data.table(filepath=list.files( pattern = "_(train|test).txt$",recursive = TRUE))
listFiles
listFiles[,mutate(listFiles,fileType=strsplit(filePath,"\.")[2])]
listFiles[,mutate(listFiles,fileType=strsplit(filePath,".")[2])]
listFiles[,mutate(listFiles,fileType=strsplit(filepath,".")[2])]
head(listFiles[,mutate(listFiles,fileType=strsplit(filepath,".")[2])])
head(listFiles[,mutate(listFiles,fileType=strsplit(filepath,"\.")[2])])
head(listFiles[,mutate(listFiles,fileType=strsplit(filepath,"\\.")[2])])
head(listFiles[,mutate(listFiles,fileType=strsplit(filepath,"\\."))])
head(listFiles[,mutate(listFiles,fileType=strsplit(filepath,"\\.")[1])])
listFiles[,mutate(listFiles,fileType=strsplit(filepath,"\\."))]
listFiles[,mutate(listFiles,fileType=strsplit(filepath,"_[a-zA-Z]*."))]
listFiles[,mutate(listFiles,fileType=strsplit(filepath,"_[a-z]*."))]
listFiles[,mutate(listFiles,fileType=strsplit(filepath,"/"))]
listFiles[,mutate(listFiles,fileType=strsplit(filepath,"/")[2])]
listFiles[,mutate(listFiles,fileType=strsplit(filepath,"/")[1:2])]
listFiles[,mutate(listFiles,fileType=strsplit(filepath,"/"))]
listFiles[,mutate(listFiles,filetype=strsplit(filepath,"/"))]
listFiles[,mutate(listFiles,filetype=strsplit(filepath,"/"))]
a<-listFiles[,mutate(listFiles,filetype=strsplit(filepath,"/"))]
a[,2]
a[[2]][1]
a[[2]][1][2]
a[[2]][1]
a[[2]][1][1]
a[[1]][1][1]
a[[2]][1,1]
a[[2]][1]
a[[2]][1][1]
a[,a$filetype=a$filetype[2]]
a<-listFiles[,mutate(listFiles,filetype=strsplit(filepath,"/"))]
head(a)
lapply(a$filetype,function(x){x[1]})
lapply(a$filetype,function(x){x[2]})
a<-mutate(listFiles,filetype=strsplit(filepath,"/"))
a
strsplit(listFiles,"/")
listFiles
strsplit(listFiles$filepath,"/")
strsplit(listFiles$filepath,"/") %>% mutate(listFiles,filetype=.)
strsplit(listFiles$filepath,"/") %>% lapply(function(x){x[2]})
strsplit(listFiles$filepath,"/") %>% lapply(function(x){x[2]}) %>% mutate(listFiles,filetype=.)
listFiles <- strsplit(listFiles$filepath,"/") %>%
lapply(function(x){x[2]}) %>%
mutate(listFiles,filetype=.)
head(listFiles)
head(listFiles)
split(listFiles,listFiles$filetype)
class(listFiles$filetype)
listFiles <- strsplit(listFiles$filepath,"/") %>%
sapply(function(x){x[2]}) %>%
mutate(listFiles,filetype=.)
class(listFiles$filetype)
head(listFiles)
split(listFiles,listFiles$filetype)
listFiles <- data.table(filepath = list.files(pattern = "_(train|test).txt$", recursive = TRUE))
head(listFiles)
listFiles[,filetype:=sapply(strsplit(listFiles$filepath,"/"),function(x){x[2]})]
listFiles
listFiles <- data.table(filepath = list.files(pattern = "_(train|test).txt$", recursive = TRUE))
listFiles[,filetype:=sapply(strsplit(listFiles$filepath,"/"),function(x){x[2]})]
listFiles
split(listFiles,listFiles$filetype)
listFiles <- data.table(filepath = list.files(pattern = "_(train|test).txt$", recursive = TRUE))
sapply(strsplit(listFiles$filepath,"/"),function(x){x[2]})
b<-sapply(strsplit(listFiles$filepath,"/"),function(x){x[2]})
split(listFiles,b)
listFiles <- sapply(strsplit(listFiles$filepath,"/"),function(x){x[2]}) %>%
split(listFiles,.)
listFiles
listFiles <- strsplit(listFiles$filepath,"/") %>%
sapply(function(x){x[2]}) %>%
split(listFiles,.)
listFiles <- data.table(filepath = list.files(pattern = "_(train|test).txt$", recursive = TRUE))
listFiles <- strsplit(listFiles$filepath,"/") %>%
sapply(function(x){x[2]}) %>%
split(listFiles,.)
listFiles
class(listFiles)
class(data.table(listFiles))
data.table(listFiles)
c<-data.table(listFiles)
c
c
c
c
c
c
c
c
c
c
c[1]
c[[1]]
c[[2]]
dim(c)
listFiles <- data.table(filepath = list.files(pattern = "_(train|test).txt$", recursive = TRUE))
listFiles[,filetype:=sapply(strsplit(listFiles$filepath,"/"),function(x){x[2]})]
listFiles
listFiles
listFiles[filetype=="test"]
listFiles[filetype=="test",filepath]
listFiles <- list.files(pattern = "_(train|test).txt$", recursive = TRUE)
class(listFiles)
listFiles
listFiles <- list.files(pattern = "_(train|test).txt$", recursive = TRUE)
#listFiles[,filetype:=sapply(strsplit(listFiles$filepath,"/"),function(x){x[2]})]
listFiles <- strsplit(listFiles,"/") %>%
sapply(function(x){x[2]}) %>%
split(listFiles,.)
listFiles
listFiles <- list.files(pattern = "_(train|test).txt$", recursive = TRUE) %>%
strsplit(listFiles,"/") %>%
sapply(function(x){x[2]}) %>%
split(listFiles,.)
listFiles <- list.files(pattern = "_(train|test).txt$", recursive = TRUE)
listFiles <- strsplit(listFiles,"/") %>%
sapply(function(x){x[2]}) %>%
split(listFiles,.)
listFiles$test
listFiles$train
?file
gsub("test","unified",listFiles$test)
listFiles
for (i in listFiles$test) print(i)
seq(along.with(listFile$test))
?seq
seq(along.with=1:10)
seq(along.with=listFiles$test)
for (i in seq(along.with=listFiles$test)) print(i)
for (i in seq(along.with=listFiles$test)) print(i)
for (i in seq(along.with=listFiles$test)){}
for (i in seq(along.with=listFiles$test)){
rm(list=ls())
path <- function (x) {paste("UCI HAR Dataset/", x, sep = "")}
#featuresTbl <- readLines(path("features.txt")) %>%
#       gsub("-"," ",.) %>%
#       textConnection() %>%
#       read.table(fill=TRUE)
featuresTbl <- path("features.txt") %>%
read.table(sep=" ",fill = TRUE)
listFiles <- list.files(pattern = "_(train|test).txt$", recursive = TRUE)
listFiles <- strsplit(listFiles,"/") %>%
sapply(function(x){x[2]}) %>%
split(listFiles,.)
head(listFiles)
for (i in seq(along.with=listFiles$test)){
x<-readLines(listFiles$test[1])
head(x)
x<-as.numeric(readLines(listFiles$test[1]))
x<-read.table(listFiles$test[1])
y<-readLines(listFiles$test[1])
head(x)
head(x[1,1])
head(y[1,1])
head(y[1])
z<-read.table(y)
?read.table
data.frame(y)
z<-data.frame(y)
rm(z)
x<-read.table(listFiles$test[1])
x<-read.table(listFiles$test[1])
write.table(x,file(gsub("test","unified",listFiles$test)))
gsub("test","unified",listFiles$test[1])
write.table(x,file(gsub("test","unified",listFiles$test[1])))
file("a.txt")
close("a.txt")
ab<-file("a.txt")
close(ab)
write.table(x,ab)
ab<-file("a.txt")
ab
fileConn<-file("output.txt")
writeLines(c("Hello","World"), fileConn)
close(fileConn)
fileConn<-file("output.txt")
class(x)
write.table(x,fileConn,)
write.table(x,fileConn)
fileConn<-file("output.txt")
write.table(x,fileConn)
close(fileConn)
close(fileConn)
write.table(x,fileConn)
z<-read.table("output.txt")
gsub("test","unified",listFiles$test[1])
fileConn<-file(gsub("test","unified",listFiles$test[1]))
close(fileConn)
x<-read.table(listFiles$test[1])
head(x[,1:3])
?write.table
